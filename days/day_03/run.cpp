#include <cstdio>
#include <experimental/array>

template<std::size_t size>
using CharConstPtr = char const (&)[size];

template<typename T, std::size_t size>
struct Grid;

template<std::size_t size_0, std::size_t size_1>
struct Grid<CharConstPtr<size_0>, size_1>{
    constexpr static auto no_of_rows = size_1;
    constexpr static auto no_of_cols = size_0 - 1;

    std::array<char const*, size_1> array;
};

template<typename T, typename... Ts>
constexpr auto make_grid(T&& value, Ts&&... values) noexcept{
    return Grid<T, 1 + sizeof...(Ts)>{std::experimental::make_array(std::forward<T>(value), std::forward<Ts>(values)...)};
}

// Count trees

template<auto right, auto down, typename G>
constexpr auto count_trees(G const& grid) noexcept{
    std::size_t i = 0;
    std::size_t j = 0;
    std::size_t n = 0;
    while(true){
        i += down;
        if(i >= grid.no_of_rows){
            break;
        }
        j = (j + right) % grid.no_of_cols;
        n += int(grid.array[i][j] == '#');
    }
    return n;
}

constexpr static auto input = make_grid(
    ".........#..##..#..#........#..",
    "#...#..#..#...##.....##.##.#...",
    "....#..............#....#....#.",
    "#.#..#.....#...#.##..#.#.#.....",
    "........#..#.#..#.......#......",
    ".#........#.#..###.#....#.#.#..",
    "........#........#.......#.....",
    "...##..#.#.#........##.........",
    "#.#.##..###............#...#...",
    "............#....#.......###.##",
    "....##....##..#........#......#",
    "............#.#..........#.....",
    "#.#....#....##...#.....#.....#.",
    "......#.#.#...#.....###....#..#",
    "...........##..#.........#..#.#",
    "..#..#.................#..#..#.",
    ".#....###...#.......#.........#",
    "#.#.#.#...#......#.......#...#.",
    ".......#.#.#...#..............#",
    "...##.......#..##.#.......##...",
    "#.#.##....#..##..##..###...###.",
    ".#......##.##.#....#.##........",
    "..###.............##..##..#....",
    ".....#.#...........#..##..##...",
    ".###.#.#......#.....#........##",
    "...#.......#...##..#..#..#.....",
    "..............#.#..##.##..##..#",
    "#..#.#......#............#.....",
    "........#..#....#..............",
    "...#...#..............#.#####..",
    "...##......#........#.#...#....",
    "..##......#............#..#..#.",
    "....#.........#.#.#.....###.#..",
    "#....#........#........#....#.#",
    ".....#...#..##.....##...#.....#",
    "#...#.#.#...##..##.###.#.#.....",
    "......#.#..........#...#.##....",
    "..............##...#..#.......#",
    "........##.....#.....#.#....#..",
    "..............#..#..#...#.....#",
    "##......##.......##...#.#....#.",
    ".....#.............#.#.........",
    "#.........##..#..#.........##..",
    "..#..#.....#####.........##.#..",
    ".......##.#......#........#....",
    "#.................#.#...#....#.",
    "...#........#.###.##.##.....#..",
    "#.....##..#...##.#.#......#....",
    ".....#..#.#..........##..#.##..",
    "..###.............#..#..#...#..",
    "...###..#...#.....##..........#",
    "#.......#.#...#....#..##..#..#.",
    ".#..#.........#..............#.",
    "..######.....#....##......#....",
    "#..##...#......#..#.#....#.....",
    ".#...................#.#.....#.",
    "..#...#.#..#.#......#..#...#..#",
    "..##..##.#.##.........#.#.#....",
    "...#...#...........#..##.##...#",
    "#...#....#....#....#..#.##..#..",
    "..#.##....#....###..#..........",
    "#.#..##.#.#...##.#..#.##..#.#..",
    "#......##...#.#..........#..#..",
    "#.#...#..#...#.#.#..#........#.",
    "#.#.##.#..#...#..#.#.##........",
    ".....#......#........#..#......",
    "...#....#.#....#...............",
    "....#..###..#....#..#....#....#",
    ".#........###..........##.##.#.",
    "#.#......##....##...##.#......#",
    "#..##.##...#...........##.#.#..",
    ".#.....#.#...#.................",
    "##..........#..#....#.....#...#",
    "....#.#..........##..#.....#.##",
    "#.#..#..#..##..........#.......",
    "..#.#.###......................",
    "......##..##.....#..##.##....#.",
    "...#.......#.##....#......#....",
    "...#...#........#...#.#...#..##",
    "##...#....#.#...#.#.##..##...#.",
    "...#.....#...#...#....###.#..#.",
    "..#.#..#........#......#..##..#",
    "...#......#...#.#.##...##.#.#.#",
    "....#.#....#....#.....#.....##.",
    ".....#.#..##.#....##....##.....",
    ".#...###..#.....#............#.",
    "#..#.#.#..#..#...#....#...#....",
    "#.....#..#...#................#",
    "..........#..#.......#......#.#",
    "...#..#......#...#......#......",
    ".#.#.....#.#.#.#......#..#..#..",
    ".....#.........#.#.#.....##.#..",
    ".....#.#.....#..#..#..#.....###",
    "##....#......##....##.#....#.#.",
    "#####........#..........##.....",
    ".#...##...#...#.......#....#...",
    "#.#.##...##...##..##........#..",
    "#.#..............#.#...#...###.",
    "...#.....##..#.........#....#.#",
    "#.#....#....#..##.#..#...#.....",
    "..#....#.#..#...#...##.....#...",
    "....#...#......................",
    "..#...#.......#..#...##....#...",
    ".#........#...#.....##.##...#..",
    "#......#..............#..#..#..",
    "...........#.#..#.#.#....#....#",
    ".##..##.......#...#..#.....#..#",
    "...#.........#.........###..#..",
    "...#.##....#....#.....#.....#..",
    ".#.#.#.........#.#.#....#....#.",
    "...#..........##..#....#.#.....",
    "...#....##................#....",
    "#....##..#..#........##...#....",
    "#...#...##.#............#....#.",
    "##..#....#...#...............#.",
    "..........#.#...#..##..#.#.....",
    "..##...##..#....#.#......#.....",
    ".......#......#.#.....#.....##.",
    "#...###.....##..##....#.#....#.",
    ".###......#.....#.#............",
    "#.....#.....####.##....#..#....",
    "......###.............#......##",
    ".........##.......##..#..#..#..",
    ".#.......#....#...#...#.#......",
    "#...#..#...#........#...##..#..",
    ".#....#........#.........##..#.",
    "..............##.#...##..#.##.#",
    ".#....#...#....#......#..#.....",
    "#....##.#...#.#.....###..#....#",
    "#.......##.#..###..............",
    "#..#..#..#......#.#..#...#..#.#",
    ".......#.#.#..#..#...#..#......",
    ".#..#......#.....#......##..##.",
    "....#....#.......#.......#.#.##",
    ".......#.#................#...#",
    "#.#.....#.......#.#........#...",
    ".....#....##...#......#.....##.",
    ".#......#.#...#..#....#....#.##",
    "##...#.###.#....#..#....#.#...#",
    "....#.##..##.#.............#...",
    "#..#.............##.......#.#..",
    "##.#..#..#.#...........###...##",
    ".#.#.....#......###........#...",
    "#.#...#.#....##......#.#....#..",
    "#.........#..........#.........",
    ".......#....#...#..#.....#...##",
    ".......................#...#..#",
    ".###...........##...#........##",
    "#.#....######.#........#..##.#.",
    "..#.##.#...#.#.......#.##.##..#",
    "#.............###..#.##.#......",
    "...#..##......#...#..###.....#.",
    "..........#.....#..#...##..#...",
    "..##..........#.#..#.....#...#.",
    "...#.......#.....##.........#..",
    "#..#.#...#..#...###...#...#.#..",
    "#.##....#..#.#.......#..#..#...",
    "..#.##.#......#.#......#....#..",
    "..........#...##.....###.......",
    "...#...##..#......#...##.......",
    "....#........#.#.......#..###..",
    ".....#.#..........##.#..#..#.#.",
    ".............##.....#.#..##....",
    "...#...............##...#......",
    "....#......#..#....#...##..#...",
    ".##.#....#.#.....#.#.........#.",
    ".....#.###....#..###..#.#.....#",
    ".#.........##.........##...#...",
    "..#.....###....##..........#..#",
    "........#..#.#.#..#.......#..##",
    "..#.#..#.#............#.##.#..#",
    ".#....#.....#..#...#.......##..",
    ".#...........#.#..#..###.###...",
    "..#.....#..#........#.#........",
    ".#........##........#..#.##....",
    "......#.....##........##..#....",
    ".#..................##....#.#..",
    ".#..#.#..#.#...#........#......",
    "...#..##.#......#..#..........#",
    "....#.##...#....##.............",
    "#....#.##....##.###..#..#..#...",
    "..........#..#...##.##....#..#.",
    ".###.#.....#...#...#...#.......",
    "............#...............#.#",
    "#....#...#......#....#.#.#.#.##",
    "...#..........#.#.#.....###....",
    "#.#...##...#..#.....###...#....",
    "......#...#..#..#..#.##...##...",
    "...#..#.#....#...#.#.........##",
    "##....#..###.#.##.....##.......",
    "..#.#...#..##.......#.#.......#",
    "##......#...........#......#...",
    ".......#..###....###..##.#...##",
    ".........#.....#..#.......##..#",
    ".......#.##..#....#...#.#...#..",
    "#..#.#..................##.#..#",
    "...#..#..#.....#..#........#...",
    "...#.#..###..#.....##...#....#.",
    "..#..#......#...........#...#..",
    "#...##.##..###.......##........",
    ".#.....#..#....#.....#.##....#.",
    "#..#........#.#....#..#...#.###",
    "..#...#.#.#.....#.....#..#.....",
    ".##.............#.#......##...#",
    ".#....#####............#.....##",
    "#.###.......#.#...##.....#.....",
    "......#.##..#...#..#..##.#..##.",
    "......#.#...##.....#...#....##.",
    "....#............#...#...#....#",
    ".........##.#.#....#....#....##",
    ".#...##.#...#.......#.##....#.#",
    "#....#.#...#.#...#.#.#...#.....",
    ".#.#.........##..#..#..........",
    ".#.........#.#.....#..#.#..###.",
    "....##.#.#..........#..####....",
    "....#..#.#.#...#...#..#....#...",
    "..#.#...#...##.......#.#.#..#..",
    "...##...#......#.....#.#...#..#",
    "......#.###.#.......##...#...#.",
    ".....#.#.#......##..........###",
    "##.#.#.#..#....#...............",
    ".#.#.##.......#....#.#.....#..#",
    ".........#...#.#..#.......#....",
    "....#.####.#......#...#...##...",
    "#..#..#..#..#....#...##.....##.",
    "......####.#..##..#.....##.....",
    "##.#.........#........#..#.#...",
    ".#.#....#....#.......#.#....##.",
    "....#....#.......##..#.....#...",
    ".#......#..#....#.#............",
    "#..#.#.##.....#..#.#.#.#.#.##..",
    ".#.....#.....#...#..#.#...#.#..",
    ".#.#.##............#.#.#.#.#.#.",
    ".##..........#.....#...###.....",
    "#.#...#...#................#.#.",
    "##...#.##.....#.....#.#.##.....",
    "####.....##..........#......#..",
    "#.............#..............#.",
    ".###....#.#...#..#..#..#.......",
    "..#.#.....#...#..#..####.......",
    "...#.#..#........#..##..#..#.##",
    ".#........#..........#.#...##..",
    ".#.......#.#.#..#...#..#.#...##",
    ".#.....##......##..............",
    "......#..#.#.##...##.#.....#...",
    ".........#.#...##.....##....#.#",
    ".....##...#........#..#.#..#.#.",
    ".#.##..#.....##...#...###.#.#..",
    "...##...#...#..#.#..#..........",
    "##..............#...#...#.#..#.",
    "......#..#......#..#.....#...#.",
    ".......#...#..#....#.....#.....",
    "..##.....##..#.#........#......",
    ".###.#...#.....................",
    "..#...#.................#...#..",
    "#..#.##...####.............#...",
    ".##....#..####.......#.........",
    "#..#...###...#...#..#..##......",
    "....#.##.#.#.........#.....#..#",
    ".....#...#.....#.#.#.##.#...##.",
    ".............#........#.....#..",
    "...##.###.#....##.......#..#...",
    "#..#....#....#.#............#..",
    ".........#.##........##.....#..",
    ".........#.#.#..#..#.......#...",
    ".......#.#..#.......#.....#.#..",
    "##.#.....##...##.....#.#.......",
    ".#.#.#......##.##.#.........#..",
    "..#.##..###.....###.........##.",
    ".#......#..#..##...#.#...##.#.#",
    "......#.#............#.....#...",
    "###.#..#..#..#..#.##...#.......",
    ".#.#.##..###....#......##..###.",
    "#...#.#.#..#..#..##.#.##....#..",
    "..#...#...####...#......####.##",
    "..##.#.####........#..#......#.",
    ".#..#.......#...#.#.........#..",
    "........#.#....#..#####..#.....",
    ".#...........#..#..#..#...#....",
    "....#....#...#.................",
    "....##..#....##....#..#....#.##",
    "....#.##.....###...#...##.##...",
    "......##.#..##.#.#.#....#.#.#..",
    "##.#...###....#.#..#.#.###....#",
    "......###..#..#..........##...#",
    "..........#.##...##..#....##.#.",
    ".#...#.#..#.#.#..#.....#.......",
    ".#....#..#.#..#.#...##.#.#.....",
    ".##.....#...#..##.#........#...",
    "....#......#.........#....#..##",
    ".#..#.#.#.#..#..#.#.........#..",
    ".........#.....#...#....#......",
    "#..#..#........#...#.#.........",
    "...#.#.#...##.#.#...#..#......#",
    "#.#.#.#........#...#..#.....#..",
    ".###..#..#..###..#..#..........",
    ".....#......#.#..#...#.......#.",
    "##.##.........#.......##.......",
    "#...##.......#..#.#.......#....",
    "#..#..#.....#...#......#.......",
    ".#..#..#.##....#.#..#...#...#..",
    ".#...#.....#..#.........#..#...",
    "...#.#.#.......#....#..##.....#",
    ".........#..##.#..#..#.#.......",
    "#.##.....##..###..#..#..#.##...",
    "........#......#...##...###..##",
    ".##....##..#..#..###......#....",
    "............##......#...#..##..",
    "...##.......#......#...##.##..#",
    "...#..#..#.#...####.#.......#..",
    "..#.##..#....#......#.#.....#..",
    "..#.##..............#..##.....#",
    ".....##....#......#....#......#",
    "......#..#......#.........#..#.",
    "...#.##.###...###..#.##........",
    "..........####.#.##.....#..#.##",
    "#...##...........#...........##",
    "#.#..#.#....#.#..#....##......#",
    ".......#...#.....#......#.#.##.",
    "....#.##..##..........#..#.....",
    "#.#.#...#......#...#.....#.##.#",
    "........#.......#..##.....##...",
    ".....####.#....#.#............."
);

constexpr static auto trees_0 = count_trees<1, 1>(input);
constexpr static auto trees_1 = count_trees<3, 1>(input);
constexpr static auto trees_2 = count_trees<5, 1>(input);
constexpr static auto trees_3 = count_trees<7, 1>(input);
constexpr static auto trees_4 = count_trees<1, 2>(input);

constexpr static auto trees = trees_0
                            * trees_1
                            * trees_2
                            * trees_3
                            * trees_4;

int main(){
    std::printf("right 1, down 1 = %lu\n", trees_0);
    std::printf("right 3, down 1 = %lu\n", trees_1);
    std::printf("right 5, down 1 = %lu\n", trees_2);
    std::printf("right 7, down 1 = %lu\n", trees_3);
    std::printf("right 1, down 2 = %lu\n", trees_4);
    std::printf("product         = %lu\n", trees);
    return 0;
}
